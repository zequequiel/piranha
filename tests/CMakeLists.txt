include(YACMACompilerLinkerSettings)

# Setup for the split compilation of tests.

# NOTE: this needs to be a macro since it is modifying the external variable _PIRANHA_TEST_NUM.
macro(ADD_PIRANHA_TESTCASE arg1)
	if(PIRANHA_TEST_NSPLIT)
		math(EXPR _PIRANHA_TEST_NUM "(${_PIRANHA_TEST_NUM} + 1) % ${PIRANHA_TEST_NSPLIT}")
	endif()
	if(NOT PIRANHA_TEST_NSPLIT OR "${PIRANHA_TEST_SPLIT_NUM}" STREQUAL "${_PIRANHA_TEST_NUM}")
		add_executable("${arg1}" "${arg1}.cpp")
		target_compile_options(${arg1} PRIVATE "$<$<CONFIG:DEBUG>:${PIRANHA_CXX_FLAGS_DEBUG}>" "$<$<CONFIG:RELEASE>:${PIRANHA_CXX_FLAGS_RELEASE}>")
		if(PIRANHA_RUN_ON_VALGRIND AND CMAKE_BUILD_TYPE STREQUAL "Debug")
			# Add a special definition for the unit tests when the run-on-Valgrind
			# option is selected.
			target_compile_definitions(${arg1} PRIVATE PIRANHA_RUN_ON_VALGRIND)
		endif()
		target_link_libraries(${arg1} piranha Boost::system Boost::filesystem)
		# NOTE: for clang-cl, cmake tries to set -std=c++11 here, which makes
		# it error out. Disable it as MSVC 2015 is implicitly C++14 anyway.
		if(NOT (YACMA_COMPILER_IS_MSVC AND YACMA_COMPILER_IS_CLANGXX))
			set_property(TARGET ${arg1} PROPERTY CXX_STANDARD 11)
    	set_property(TARGET ${arg1} PROPERTY CXX_STANDARD_REQUIRED YES)
    	set_property(TARGET ${arg1} PROPERTY CXX_EXTENSIONS NO)
		endif()
		add_test("${arg1}" "${arg1}")
	endif()
endmacro()

ADD_PIRANHA_TESTCASE(array_key)
ADD_PIRANHA_TESTCASE(atomic_utils)
ADD_PIRANHA_TESTCASE(base_series_multiplier)
ADD_PIRANHA_TESTCASE(binomial)
ADD_PIRANHA_TESTCASE(cache_aligning_allocator)
ADD_PIRANHA_TESTCASE(convert_to)
ADD_PIRANHA_TESTCASE(demangle)
ADD_PIRANHA_TESTCASE(divisor_01)
ADD_PIRANHA_TESTCASE(divisor_02)
ADD_PIRANHA_TESTCASE(divisor_series_01)
ADD_PIRANHA_TESTCASE(divisor_series_02)
ADD_PIRANHA_TESTCASE(dynamic_aligning_allocator)
ADD_PIRANHA_TESTCASE(exceptions)
ADD_PIRANHA_TESTCASE(hash_set_01)
ADD_PIRANHA_TESTCASE(hash_set_02)
ADD_PIRANHA_TESTCASE(init)
ADD_PIRANHA_TESTCASE(invert)
ADD_PIRANHA_TESTCASE(ipow_substitutable_series)
ADD_PIRANHA_TESTCASE(lambdify)
ADD_PIRANHA_TESTCASE(key_is_convertible)
ADD_PIRANHA_TESTCASE(key_is_multipliable)
ADD_PIRANHA_TESTCASE(kronecker_array)
ADD_PIRANHA_TESTCASE(kronecker_monomial_01)
ADD_PIRANHA_TESTCASE(kronecker_monomial_02)
ADD_PIRANHA_TESTCASE(math)
ADD_PIRANHA_TESTCASE(memory)
ADD_PIRANHA_TESTCASE(monomial_01)
ADD_PIRANHA_TESTCASE(monomial_02)
ADD_PIRANHA_TESTCASE(mp_integer_01)
ADD_PIRANHA_TESTCASE(mp_integer_02)
ADD_PIRANHA_TESTCASE(mp_rational_01)
ADD_PIRANHA_TESTCASE(mp_rational_02)
ADD_PIRANHA_TESTCASE(parallel_vector_transform)
ADD_PIRANHA_TESTCASE(poisson_series_01)
ADD_PIRANHA_TESTCASE(poisson_series_02)
ADD_PIRANHA_TESTCASE(poisson_series_03)
ADD_PIRANHA_TESTCASE(polynomial_01)
ADD_PIRANHA_TESTCASE(polynomial_02)
ADD_PIRANHA_TESTCASE(polynomial_03)
ADD_PIRANHA_TESTCASE(polynomial_multiplier_01)
ADD_PIRANHA_TESTCASE(polynomial_multiplier_02)
ADD_PIRANHA_TESTCASE(polynomial_multiplier_03)
ADD_PIRANHA_TESTCASE(polynomial_truncation)
ADD_PIRANHA_TESTCASE(pow)
ADD_PIRANHA_TESTCASE(power_series_01)
ADD_PIRANHA_TESTCASE(power_series_02)
ADD_PIRANHA_TESTCASE(print_coefficient)
ADD_PIRANHA_TESTCASE(print_tex_coefficient)
ADD_PIRANHA_TESTCASE(real_01)
ADD_PIRANHA_TESTCASE(real_02)
ADD_PIRANHA_TESTCASE(real_trigonometric_kronecker_monomial_01)
ADD_PIRANHA_TESTCASE(real_trigonometric_kronecker_monomial_02)
ADD_PIRANHA_TESTCASE(runtime_info)
ADD_PIRANHA_TESTCASE(s11n)
ADD_PIRANHA_TESTCASE(safe_cast)
ADD_PIRANHA_TESTCASE(safe_integral_adder)
ADD_PIRANHA_TESTCASE(series_01)
ADD_PIRANHA_TESTCASE(series_02)
ADD_PIRANHA_TESTCASE(series_03)
ADD_PIRANHA_TESTCASE(series_04)
ADD_PIRANHA_TESTCASE(series_05)
ADD_PIRANHA_TESTCASE(series_06)
ADD_PIRANHA_TESTCASE(series_07)
ADD_PIRANHA_TESTCASE(series_08)
ADD_PIRANHA_TESTCASE(settings)
ADD_PIRANHA_TESTCASE(small_vector_01)
ADD_PIRANHA_TESTCASE(small_vector_02)
ADD_PIRANHA_TESTCASE(static_vector_01)
ADD_PIRANHA_TESTCASE(static_vector_02)
ADD_PIRANHA_TESTCASE(substitutable_series)
ADD_PIRANHA_TESTCASE(symbol)
ADD_PIRANHA_TESTCASE(symbol_set)
ADD_PIRANHA_TESTCASE(t_substitutable_series)
ADD_PIRANHA_TESTCASE(term)
ADD_PIRANHA_TESTCASE(thread_barrier)
ADD_PIRANHA_TESTCASE(thread_management)
ADD_PIRANHA_TESTCASE(thread_pool)
ADD_PIRANHA_TESTCASE(trigonometric_series)
ADD_PIRANHA_TESTCASE(tuning)
ADD_PIRANHA_TESTCASE(type_traits)
